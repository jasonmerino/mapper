(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[95],{3905:function(e,r,n){"use strict";n.d(r,{Zo:function(){return s},kt:function(){return m}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),p=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},s=function(e){var r=p(e.components);return t.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?t.createElement(f,i(i({ref:r},s),{},{components:n})):t.createElement(f,i({ref:r},s))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1947:function(e,r,n){"use strict";n.r(r),n.d(r,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var t=n(2122),o=n(9756),a=(n(7294),n(3905)),i={id:"error-handler",title:"ErrorHandler",sidebar_label:"ErrorHandler"},l=void 0,c={unversionedId:"misc/error-handler",id:"misc/error-handler",isDocsHomePage:!1,title:"ErrorHandler",description:"@automapper/ does not use console methods for handling errors in the code base. Instead, @automapper/ allows the consumers to pass in errorHandler when we call createMapper().",source:"@site/docs/misc/error-handler.md",sourceDirName:"misc",slug:"/misc/error-handler",permalink:"/docs/misc/error-handler",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/misc/error-handler.md",version:"current",frontMatter:{id:"error-handler",title:"ErrorHandler",sidebar_label:"ErrorHandler"},sidebar:"docs",previous:{title:"Map Mutation",permalink:"/docs/misc/map-mutate"},next:{title:"Limitations",permalink:"/docs/misc/limitations"}},p=[],s={toc:p};function u(e){var r=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"@automapper/*")," does not use ",(0,a.kt)("inlineCode",{parentName:"p"},"console")," methods for handling errors in the code base. Instead, ",(0,a.kt)("inlineCode",{parentName:"p"},"@automapper/*")," allows the consumers to pass in ",(0,a.kt)("inlineCode",{parentName:"p"},"errorHandler")," when we call ",(0,a.kt)("inlineCode",{parentName:"p"},"createMapper()"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"errorHandler")," will take on the shape of ",(0,a.kt)("inlineCode",{parentName:"p"},"ErrorHandler")," which is the following interface:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ErrorHandler {\n  handle: (message: string) => void;\n}\n")),(0,a.kt)("p",null,"By default, ",(0,a.kt)("inlineCode",{parentName:"p"},"@automapper/*")," assigns ",(0,a.kt)("inlineCode",{parentName:"p"},"console.error")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"ErrorHandler#handle"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const mapper = createMapper({\n  name,\n  pluginInitializer,\n  errorHandler: (message) => {\n    // custom error handler\n  },\n});\n")))}u.isMDXComponent=!0}}]);